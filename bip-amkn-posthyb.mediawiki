<pre>
  BIP: amkn-posthyb
  Title: Consensus (Hard Fork) PoST Datastore for Advanced Cryptography and Higher Efficiency Mining
  Author: Andrew M. K. Nassief <loneroassociation@gmail.com>
  Comments-Summary: General interests and concerns, community has been looking into more details
  Comments-URI: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-March/018571.html
  Status: Active
  Type: Draft
  Created: 2021-03-04
  License: MIT | zlib | OPNL-2 | CC BY 4.0
  Replaces: N/A
</pre>

==Abstract==
This BIP aims to provide a more complex cryptography alternative to Bitcoin's traditional encryption scheme. It also specifies a hybrid consensus for allowing both traditional PoW and memory hard mining. The aim is for more optimized cryptographic efficiency and sustainable security in the future.

==Copyright==
'''License(s)''': MIT | zlib | OPNL-2 | CC BY 4.0
<br>
<br>
Â© 2021 Andrew M. K. Nassief

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
End license text.

===BIP Editor and Responsibilities===
The current BIP editor/champion of this proposal '''(the actual author)''' will be responsible for the following:
# Updating the BIP over time
# Advocating for needed updates and changes
# Communicating and commenting on community concerns
# Leading the implementation and development of the proposed BIP

==Specification==
# I do want to implement a NP hardness encryption scheme for complexity. This is not to be confused w/ cryptography for the polynomial reconstructive problem '''[1]'''
# I am looking towards integrating memory hard compatibility w/ the mining algorithm. Memory hard computation allows for time and space complexity for data storage functionality, and there is a way this can likely be implemented without disenfranchising current miners or their hardware if done right.
# I am looking towards more complex ways to tackle invalid blocks or sustainability problems. Most likely this may integrate a lot of custom code, but may be an implementation in regards to this specification. Also see '''[2]'''
# The traditional PoW style mining and an asymmetric key encryption scheme will still be implemented in this new hard fork.

===Motivation===
The purpose of this proposal is primarily related to Bitcoin's consensus algorithm and cryptography. The idea is centered around an improvement on mining efficiency and better security. The aim is for mining to be compatible the way that it currently is, as well as memory hard compatibility as well. Besides memory hard or ''proof of space and time'' compatibility, there are other reasons these integrations need to be implemented. This includes a cryptographic proof for NP completeness as how to best avoid a significant complexity cracking in the future or a cryptographic attack vector. Nonetheless, Bitcoin's  level of cryptography needs to significantly change in order for Bitcoin to be decentralized and relevant in the future. Significant worries such as Post-Classical Computing i.e Quantum Computing, the solving of the P vs. NP or other threats are posed for Bitcoin's sustainable future. Tackling many of these threats can better be instigated with the cryptographic proofs and systems I believe could be of value.

===Rationale=== 
In regards to cryptographic key validation, an advancement beyond Satoshi's chosen secp256k1 algorithm needs to happen for sustainable security for the near future. This is in part due to the fact that the elliptic curve encryption chosen is very susceptible to break. I believe an asymmetric cryptography algorithm can be better optimized for polynomial time complexity such as an NP hardness encryption scheme possibly based off of Homomorphic encryption, or some sort of regressional model that can be more prominent in the future.

As stated prior, post-classical computing and potential unsolved mathematical theorems becoming solved, pose a huge threat to breaking Bitcoin's current encryption scheme on many levels. Outside of key validation, is the cryptographic complexity of the hashing algorithm. I believe SHA 256 can be replaced with something such as a NP-Complete Encryption scheme '''[3]''' and potential solutions similar to the McEliece cryptosystem '''[4]'''. This is something I aim to evidently tackle as well. However, I am looking into tackling mining first.

I also believe the PoW algorithm can be modified to allow mining the way it is currently done, as well as be more compatible for memory hard mining functionality. An implementation of a hybrid PoST ''(Proof of Space and Time)'' algorithm and traditional PoW ''(Proof of Work)'' is more suited for modern day cryptocurrency mining. While memory-hard hardware might be comparable to the costs of ASIC specific hardware in regards to mining efficiency, this new implementation is more related to expanding the infrastructure available for mining Bitcoin. 

Outside of hardware availability, is also a need for an algorithm to be optimized towards less invalidated blocks. This will be feasible with complex data store functionalities.

==Reference implementation==
[[File:https://raw.githubusercontent.com/Mentors4EDU/bip-amkn-posthyb/main/bip-amkn-posthyb/Proposal%20Diagram.png]]
I want to emphasize that I believe greater mining compatibility means a higher level of decentralization. Also, in regards to encryption keys and validation, I believe a higher level of security on that front also means a higher level of decentralization. On the issue of mining, I believe that a hybrid consensus done right wouldn't disenfranchise current miners (as stated prior), and would also still allow people with other hardware to mine BTC. 

I believe a key validation system if done right, could eventually reach NP-completeness. Many promising algorithms have had forms of NP-Completeness in regards to encryption schemes, and coincidentally some of them were also known to be forms of Post-Quantum encryption '''[5]'''. Building an NP-Complete solution can be centered around, yes, it can be solved utilizing deterministic Turing machines, but make the luck chance near impossible forming some form of information-theoretic security in theory.

Once my proposal starts getting some general concensus, I aim to publish some preprints further detailing the encryption scheme and math. The same applies to starting the coding and software development, as I have the workflow planned out.

===Definitions===
1. '''Consensus:''' The agreement protocol among nodes/peers in the network
<br>
2. '''Post-Classical Computing:''' Primarily refers to computing w/ a non-classical form of computation. Primarily it often refers to Quantum Computing, but very occasionally is used in reference to forms of DNA computing or other less common areas.
<br>
3. '''secp256k1:''' The elliptic curve parameters for Bitcoin's public-key cryptography. '''[6]'''
<br>
4. '''Hashcash:''' A PoW algorithm made by Adam Beck that is widely used for Bitcoin's mining functionality. '''[7]'''
<br>
5. '''Xll:''' Former SHA-3 candidate that was previously ASIC-resistant '''[8]'''
<br>
6: '''Proof of Capacity:''' In layman terms, Proof of Work done through data storage
<br>
7: '''Memory-hard:''' Functions that require significant amounts of memory to evaluate. '''[9]''' However, this can go beyond CPU-cycles.
<br>
8: '''NP-Complete:''' NP Complete is different then NP-hardness and hardness of an NP-Complete problem. NP Complete problems are the hardest in the NP complexity class. In regards to hardness, one can optimize building a solution that is near impossible to solve over deterministic brute force or some sort of information-theoretic security scheme such as MPC. '''[10]''' 
<br>
9: '''Asymmetric Keys:''' An encryption validation scheme that utilizes private/public keys.
<br>
10: '''ASIC Mining:''' ASIC stands for application-specific integrated circuit, and is often synonymous with specialized hardware.
<br>
11: '''Homomorphic encryption:''' An encryption scheme that lets one perform calculations on the data prior to decryption. '''[11]'''

==See Also==
[1] [https://ieeexplore.ieee.org/document/1684586 Evaluation of Polynomial Reconstruction Problem using Lagrange Interpolation Method]
<br>
[2] [https://bitcoin.org/en/alert/2015-07-04-spv-mining#cause Some Miners Generating Invalid Blocks]
<br>
[3] [https://cs.stackexchange.com/questions/356/why-hasnt-there-been-an-encryption-algorithm-that-is-based-on-the-known-np-hard Why hasn't there been an encryption algorithm that is based on the known NP-Hard problems?]
<br>
[4] [https://en.wikipedia.org/wiki/McEliece_cryptosystem McEliece cryptosystem]
<br>
[5] [https://en.wikipedia.org/wiki/NIST_Post-Quantum_Cryptography_Competition NIST Post-Quantum Cryptography Competition]
<br>
[6] [https://en.bitcoin.it/wiki/Secp256k1 Secp256k1]
<br>
[7] [http://www.hashcash.org/ Hashcash]
<br>
[8] [https://en.bitcoinwiki.org/wiki/X11 X11]
<br>
[9] [https://en.wikipedia.org/wiki/Memory-hard_function Memory-hard function]
<br>
[10] [https://en.wikipedia.org/wiki/Secure_multi-party_computation MPC]
<br>
[11] [https://en.wikipedia.org/wiki/Homomorphic_encryption Homomorphic encryption]
===Acknowledgements===
Partial inspiration comes from the [https://www.chia.net/ Chia Network], however this isn't the same thing. The mining capabilities in this proposal isn't meant to be a replacement to PoW, rather we are giving PoW data storage memory-hard compatibility w/ the currently existing mining compatibilities it has now. In regards to overall cryptography, we were somewhat inspired by the halting problem and [http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.263.9717 Quantum recursion theory]. There is a huge belief behind this proposal that Bitcoin will radically need to change its cryptography to be relevant in the not so distant future. Regardless of supposed controversy, this is a huge step evidentially needing to be done and even allows for Bitcoin to be further decentralized than what it currently is. I am looking to help create some of these custom cryptographic proofs that may help with that mission.
